"""partial_matches

Revision ID: 56c75226e590
Revises: 281838b97f8b
Create Date: 2025-05-06 11:24:02.581634

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "56c75226e590"
down_revision: Union[str, None] = "281838b97f8b"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "match_results",
        sa.Column("internal_id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("score", sa.Integer(), nullable=False),
        sa.Column(
            "winning_teams", postgresql.JSONB(astext_type=sa.Text()), nullable=False
        ),
        sa.Column("timestamp", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("internal_id"),
    )
    op.create_index(
        op.f("ix_match_results_score"), "match_results", ["score"], unique=False
    )
    op.create_index(
        op.f("ix_match_results_timestamp"), "match_results", ["timestamp"], unique=False
    )
    op.create_table(
        "matches",
        sa.Column("match_number", sa.Integer(), nullable=False),
        sa.Column(
            "match_level",
            postgresql.ENUM(
                "QUALIFICATION", "PLAYOFF", name="match_level", create_type=False
            ),
            nullable=False,
        ),  # type: ignore
        sa.Column("event_internal_id", sa.Integer(), nullable=False),
        sa.Column("result_internal_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["event_internal_id"],
            ["events.internal_id"],
        ),
        sa.ForeignKeyConstraint(
            ["result_internal_id"],
            ["match_results.internal_id"],
        ),
        sa.PrimaryKeyConstraint("event_internal_id", "match_number"),
    )
    op.drop_index("ix_top_scores_score", table_name="top_scores")
    op.drop_index("ix_top_scores_timestamp", table_name="top_scores")
    op.drop_table("top_scores")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "top_scores",
        sa.Column("match_number", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("score", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "winning_teams",
            postgresql.JSONB(astext_type=sa.Text()),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "timestamp",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "match_level",
            postgresql.ENUM("QUALIFICATION", "PLAYOFF", name="match_level"),
            autoincrement=False,
            nullable=False,
        ),  # type: ignore
        sa.Column(
            "event_internal_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["event_internal_id"],
            ["events.internal_id"],
            name="top_scores_event_internal_id_fkey",
        ),
        sa.PrimaryKeyConstraint(
            "event_internal_id",
            "match_level",
            "match_number",
            name="top_scores_event_internal_id_match_level_match_number_pk",
        ),
    )
    op.create_index(
        "ix_top_scores_timestamp", "top_scores", ["timestamp"], unique=False
    )
    op.create_index("ix_top_scores_score", "top_scores", ["score"], unique=False)
    op.drop_table("matches")
    op.drop_index(op.f("ix_match_results_timestamp"), table_name="match_results")
    op.drop_index(op.f("ix_match_results_score"), table_name="match_results")
    op.drop_table("match_results")
    # ### end Alembic commands ###
